#lang racket
(define(ejemplo)
  (define lista(list '()))
  (define cont 0)
  (define pos 1)
  (menu lista cont pos)
  )

(define(menu lista cont pos)
  (newline)
  (newline)
  (display"|-----------------------------------------------------|\n")
  (display"|                     ¡Bienvenido!                    |\n")
  (display"|                    Menu De Inicio                   |\n")
  (display"|-----------------------------------------------------|\n")
  (display"|  1. Agregar datos a la lista.                       |\n")
  (display"|  2. Mostrar datos de la lista.                      |\n")
  (display"|  3. Cuantos elementos tiene la lista.               |\n")
  (display"|  4. Buscar dato en la lista.                        |\n")
  (display"|  0. Salir.                                          |\n") 
  (display"|-----------------------------------------------------|\n")
  (display"\nQue Opcion desea ejecutar: ")
  (define opcion (read))
  (cond
    ((= opcion 1)(set! lista (agregar lista)))
    ((= opcion 2)(begin
                   (display "\nLa lista guardada es: \n")
                   (display lista)
                   (display"\n-------------------------------------------------\n")
                   )
                 )
    ((= opcion 3)(elementos lista cont)
                 (display" \n-------------------------------------------------\n")
                 )
    ((= opcion 4)(define num 0)
                 (display "\nIngrese el dato que desea buscar: ")
                 (set! num (read))
                 (buscar lista num pos)
                 (display"\n-------------------------------------------------\n")
                 )
    ((= opcion 0) (display "\nA decidido salir de la aplicación, hasta pronto..."))
    (else (display "\nError, Opción no válida..."))
    )
  (if (not (= opcion 0))
      (menu lista cont pos)
      (void)
  )
)

(define(agregar lista)
  (display "\nIngrese un dato a la lista: ")  
  (set! lista (cons (read) lista))
  lista
) 
       
(define(elementos lista cont)
    (if (null? lista)
      (printf "\nLa lista cuenta con ~a elementos" (- cont 1))
      (elementos(cdr lista)(+ cont 1))
    )
  )
  
(define(buscar lista num pos)
  (if(null? lista)
     (display " ")
     (if(null? (car lista))
        (display "\nEl valor no se ha encontrado: -1")
        (if(= num(car lista))
           (printf "\nEl numero ~a se encuentra en la posicion: ~a" num pos)
           
           (buscar (cdr lista) num (+ pos 1))
           )
        )
     )
  )
           
         
(ejemplo)